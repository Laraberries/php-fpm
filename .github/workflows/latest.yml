name: Latest

on:
    push:
        branches: helldar
        tags:
            - v*

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                php_version: [ latest ]
        steps:
            -   name: Checkout
                uses: actions/checkout@v2
            -   name: Get the version
                id: get_version
                run: |
                    PREFIX=edge

                    if [[ $GITHUB_REF == refs/tags/* ]]; then
                        PREFIX=latest
                    fi

                    echo ::set-output name=prefix::${PREFIX}
            -   name: Prepare
                id: prepare
                env:
                    PHP_VERSION: ${{ matrix.php_version }}
                run: |
                    DOCKER_IMAGE=${GITHUB_REPOSITORY,,}
                    DOCKER_PLATFORMS=linux/amd64,linux/arm,linux/arm64
                    VERSION=${PHP_VERSION}

                    echo ::set-output name=docker_image::${DOCKER_IMAGE}

                    echo ::set-output name=buildx_args_latest::--platform ${DOCKER_PLATFORMS} \
                        --build-arg VERSION=${{ steps.get_version.outputs.prefix }} \
                        --build-arg PHP_VERSION=${PHP_VERSION} \
                        --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
                        --build-arg VCS_REF=${GITHUB_SHA::8} \
                        --tag "${DOCKER_IMAGE}:${{ steps.get_version.outputs.prefix }}" .
            -   name: Set up Docker Buildx
                uses: crazy-max/ghaction-docker-buildx@v3
            -   name: Docker Buildx (build latest)
                run: docker buildx build --output "type=image,push=false,name=${{ steps.get_version.outputs.prefix }}" ${{ steps.prepare.outputs.buildx_args_latest }}
            -   name: Login to DockerHub
                if: success()
                uses: docker/login-action@v1
                with:
                    username: ${{ secrets.DOCKER_HUB_USER }}
                    password: ${{ secrets.DOCKER_HUB_PASSWORD }}
            -   name: Docker Buildx (push latest)
                if: success()
                run: docker buildx build --output "type=image,push=true,name=${{ steps.get_version.outputs.prefix }}" ${{ steps.prepare.outputs.buildx_args_latest }}
            -   name: Inspect latest image
                if: success()
                run: docker buildx imagetools inspect ${{ steps.prepare.outputs.docker_image }}:${{ steps.get_version.outputs.prefix }}
